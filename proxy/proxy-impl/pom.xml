<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
         <groupId>org.apache.aries</groupId>
         <artifactId>java5-parent</artifactId>
         <version>0.4</version>
         <relativePath />
    </parent>

    <groupId>org.apache.aries.proxy</groupId>
    <artifactId>org.apache.aries.proxy.impl</artifactId>
    <packaging>bundle</packaging>
    <name>Apache Aries Proxy Service</name>
    <version>0.4-SNAPSHOT</version>
    <description>
        This bundle contains the proxy service implementation for Apache Aries
    </description>

    <scm>
         <connection>scm:svn:http://svn.apache.org/repos/asf/aries/trunk/proxy/proxy-impl</connection>
         <developerConnection>scm:svn:https://svn.apache.org/repos/asf/aries/trunk/proxy/proxy-impl</developerConnection>
         <url>http://svn.apache.org/viewvc/aries/trunk/proxy/proxy-impl</url>
    </scm>


    <properties>
        <aries.osgi.export.pkg>
          org.apache.aries.proxy.weaving;
        </aries.osgi.export.pkg>
        <aries.osgi.activator>
            org.apache.aries.proxy.impl.ProxyManagerActivator
        </aries.osgi.activator>
        <aries.osgi.import.pkg>
            org.objectweb.asm;version=3.2;resolution:=optional,
            org.objectweb.asm.commons;version=3.2;resolution:=optional,
            org.osgi.framework;version="[1.5,2)",
            org.osgi.framework.hooks.weaving;version="[1.0,1.1)";resolution:=optional,
            org.osgi.framework.wiring;version="[1.0,2)";resolution:=optional,
            *
        </aries.osgi.import.pkg>
        <aries.osgi.private.pkg>
            org.apache.aries.proxy.impl*
        </aries.osgi.private.pkg>
    </properties>

    <dependencies>
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm-all</artifactId>
            <optional>true</optional>
            <version>3.2</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Use the Eclipse version of OSGi until the core 4.3 OSGi jar is available in Maven. -->        
        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>osgi</artifactId>
            <version>3.7M6</version>
            <scope>system</scope>
            <systemPath>${basedir}/../proxy-tmp/target/downloaded/org.eclipse.osgi_3.7.0.jar</systemPath>
        </dependency>
        
        <!-- <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>4.3</version>
        </dependency> -->
        
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.osgi</groupId>
                    <artifactId>org.osgi.core</artifactId>                    
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.aries.testsupport</groupId>
            <artifactId>org.apache.aries.testsupport.unit</artifactId>
            <version>0.3.1-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>
        <dependency>
        	<groupId>org.apache.aries.proxy</groupId>
        	<artifactId>org.apache.aries.proxy.api</artifactId>
        	<scope>compile</scope>
            <version>0.4-SNAPSHOT</version>
            
            <exclusions>
                <exclusion>
                    <groupId>org.osgi</groupId>
                    <artifactId>org.osgi.core</artifactId>                    
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
        	<groupId>org.apache.aries</groupId>
        	<artifactId>org.apache.aries.util</artifactId>
        	<scope>compile</scope>
            <version>0.4-SNAPSHOT</version>
                        
            <exclusions>
                <exclusion>
                    <groupId>org.osgi</groupId>
                    <artifactId>org.osgi.core</artifactId>                    
                </exclusion>
            </exclusions>
        </dependency>
            <!--  hack to make javac available to maven-antrun-plugin
                  because the maven-antrun-plugin runs with java.home set to the
                  jre subdirectory of a jdk, even if maven is using the jdk
             -->
              <dependency>
                <groupId>com.sun</groupId>
                <artifactId>tools</artifactId>
                <version>1.5.0</version>
                <scope>system</scope>
                <systemPath>${java.home}/../lib/tools.jar</systemPath>
              </dependency>
    </dependencies>

    <build>
     <plugins>
       <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
         <executions>
           <execution>
             <phase>process-classes</phase>
             <configuration>
               <tasks>
                 <!-- compile the Synthesizer which can add the synthetic modifier to classes -->
                 <javac srcdir="${basedir}/src/build/resources" includes="**/Synthesize*.java" classpathref="maven.runtime.classpath"/>
                 <!-- create a classpath that includes the compiled Synthesizer -->
                 <path id="synthesizer.class.path">
                   <dirset dir="${basedir}/src/build/resources"/>
                   <path refid="maven.runtime.classpath"/>
                 </path>
                 <!-- run the Synthesizer on the WovenProxy class -->
                 <java classname="org.apache.aries.proxy.synthesizer.Synthesizer"
                       classpathref="synthesizer.class.path" fork="false">
                       <arg value="${project.build.outputDirectory}/org/apache/aries/proxy/weaving/WovenProxy.class"/>
                 </java>
               </tasks>
             </configuration>
             <goals>
               <goal>run</goal>
             </goals>
           </execution>
         </executions>
       </plugin>
     </plugins>
    </build>

</project>
