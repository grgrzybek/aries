The Subsystems subproject uses some unreleased and difficult to find equinox 
artifacts.

There's a profile to download them automatically like this:

mvn clean install -Pfetch-external

The normal build is now in the default profile so if you are running any other 
profiles you will need

mvn clean install -Pdefault,<your other profiles>

PLEASE if you change the version of these jars used in subsystems UPDATE THE 
DOWNLOAD INFO in the subsystem root pom.

The downloader is from here:

http://code.google.com/p/maven-external-dependency-plugin/

ADDENDUM

In order to use the downloader, you must do

svn co http://maven-external-dependency-plugin.googlecode.com/svn/trunk/maven-external-dependency-plugin/ maven-external-dependency-plugin

then run "mvn install" from the maven-external-dependency-plugin directory so 
that it is accessible from your local m2 repository before running 

mvn clean install -Pfetch-external 

from the subsystem project. If successful, you must the also run 

mvn clean install -Pdefault 

from the aries/subsystem directory. Additionally, you will need dependencies in 
your local m2 repository obtained from executing "mvn clean install" from the 
aries/util/util and aries/application directories.

TROUBLESHOOTING

Sometimes nightly, and often integration, builds are used for the Eclipse related dependencies. These builds have expiration dates and eventually disappear from the download site. Make sure the subsystem POM is not referencing an expired build.

Running "mvn clean install -Pdefault" for the first time from a clean workspace usually results in test errors due to missing test files. These test files are generated as part of the build before the tests are executed. It appears they simply aren't picked up by the test on the first execution. Rerunning the tests should fix the issue.

One of the tests has a dependency on derby, version>=10.5.0 being in the local .m2 repository. When setting up a clean Maven environment, it appears that sometimes this bundle does not get into the repository.xml generated by the subsystem tests in the .m2/repository directory. The solution is to delete the repostiory.xml file and rerun the tests.
